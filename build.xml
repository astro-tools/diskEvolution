<project name="diskEvolution" basedir="." default="main"
        xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="src.dir" value="src"/>
    <property name="test.dir" value="test"/>
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="testClasses.dir" value="${build.dir}/testClasses"/>
    <property name="jar.dir" value="${build.dir}/jar"/>
    <property name="lib.dir" value="lib"/>
    <property name="main-class"
        value="edu.asu.sese.diskEvolution.Main"/>
    <property name="repo-url" 
              value="http://search.maven.org/remotecontent?filepath="/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <path id="classpath.test">
        <pathelement location="${testClasses.dir}" />
        <pathelement location="${classes.dir}" />
        <path refid="classpath" />
    </path>

    <target name="clean">
        <delete dir="${build.dir}">	
            <fileset dir="." includes="**/*.zip"/>
        </delete>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>	
        <javac srcdir="${src.dir}" destdir="${classes.dir}"
               encoding="utf-8"
               classpathref="classpath" includeantruntime="false"/>
    </target>

    <target name="compile-test" depends="compile">
        <mkdir dir="${testClasses.dir}"/>
        <javac srcdir="${test.dir}" destdir="${testClasses.dir}"
                includeantruntime="false">
            <classpath>
                <path refid="classpath.test"/>
            </classpath>
        </javac>
    </target>

    <target name="build" depends="compile"/>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" 
             basedir="${classes.dir}">
            <fileset dir="${src.dir}"/>
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <target name="test" depends="compile-test">
        <junit>
            <classpath refid="classpath.test" />
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${testClasses.dir}" includes="**/*.class" />
            </batchtest>
        </junit>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="update-lib">
        <get src="${repo-url}/junit/junit/4.10/junit-4.10.jar" 
            dest="${lib.dir}/junit-4.10.jar" usetimestamp="true"/>
        <get src="${repo-url}/org/jfree/jfreechart/1.0.14/jfreechart-1.0.14.jar" 
            dest="${lib.dir}/jfreechart-1.0.14.jar" usetimestamp="true"/>
        <get src="${repo-url}/org/jfree/jcommon/1.0.17/jcommon-1.0.17.jar" 
            dest="${lib.dir}/jcommon-1.0.17.jar" usetimestamp="true"/>
    </target>

    <target name="zip" depends="clean">
        <zip destfile="${ant.project.name}.zip" excludes="bin/**">
            <zipfileset dir="." prefix="${ant.project.name}"
                        excludes="**/.*/**,bin/**/*"/>
        </zip>
    </target>

    <target name="main" depends="jar"> 
         <echo>Use "ant run" to run the application.</echo>
         <echo>Use "ant test" to run all unit tests.</echo>
    </target>

</project>
